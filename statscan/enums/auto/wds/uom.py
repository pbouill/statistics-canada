# !! This file is automatically generated by: writer.py
#     date: 2025-08-25T18:07:23.035002+00:00

from enum import Enum


class UoM(Enum):
    """
    Automatically generated Enum for Uom
    """
    NONE = 0  # (None) {'memberUomFr': None}
    _1981_100 = 1  # (1981=100) {'memberUomFr': '1981=100'}
    _199712_100 = 10  # (199712=100) {'memberUomFr': '199712=100'}
    DOLLARS_PER_8_LITRES = 100  # (Dollars per 8 litres) {'memberUomFr': 'Dollars par 8 litres'}
    DOLLARS_PER_9_LITRES = 101  # (Dollars per 9 litres) {'memberUomFr': 'Dollars par 9 litres'}
    DOLLARS_PER_9000_FEET = 102  # (Dollars per 9,000 feet) {'memberUomFr': 'Dollars par 9 000 pieds'}
    DOLLARS_PER_9_5_LITRES = 103  # (Dollars per 9.5 litres) {'memberUomFr': 'Dollars par 9,5 litres'}
    DOLLARS_PER_BUSHEL = 104  # (Dollars per bushel) {'memberUomFr': 'Dollars par boisseaux'}
    DOLLARS_PER_CARTON = 105  # (Dollars per carton) {'memberUomFr': 'Dollars par carton'}
    DOLLARS_PER_DOZEN = 106  # (Dollars per dozen) {'memberUomFr': 'Dollars par douzaine'}
    DOLLARS_PER_HOUR = 107  # (Dollars per hour) {'memberUomFr': 'Dollars par heure'}
    DOLLARS_PER_HUNDREDWEIGHT = 108  # (Dollars per hundredweight) {'memberUomFr': 'Dollars par quintal'}
    DOLLARS_PER_HUNDREDWEIGHT_1 = 109  # (Dollars per hundredweight) {'memberUomFr': 'Dollars par poids de cent douze livres'}
    _1997_100 = 11  # (1997=100) {'memberUomFr': '1997=100'}
    DOLLARS_PER_HUNDREDWEIGHT_2 = 110  # (Dollars per hundredweight) {'memberUomFr': 'Dollars par poids de cent livres'}
    DOLLARS_PER_HUNDREDWEIGHT_3 = 111  # (Dollars per hundredweight) {'memberUomFr': 'Dollars par quintaux'}
    DOLLARS_PER_HUNDREDWEIGHT_OF_MILK = 112  # (Dollars per hundredweight of milk) {'memberUomFr': 'Dollars par poids de cent douze livres de lait'}
    DOLLARS_PER_KILOGRAM = 113  # (Dollars per kilogram) {'memberUomFr': 'Dollars par kilogramme'}
    DOLLARS_PER_KILOLITRE = 114  # (Dollars per kilolitre) {'memberUomFr': 'Dollars par kilolitre'}
    DOLLARS_PER_KILOMETRE = 115  # (Dollars per kilometre) {'memberUomFr': 'Dollars par kilomètre'}
    DOLLARS_PER_LITRE = 116  # (Dollars per litre) {'memberUomFr': 'Dollars par litre'}
    DOLLARS_PER_METRIC_TONNE = 117  # (Dollars per metric tonne) {'memberUomFr': 'Dollars par tonne métrique'}
    DOLLARS_PER_PERSON = 118  # (Dollars per person) {'memberUomFr': 'Dollars par personne'}
    DOLLARS_PER_POUND = 119  # (Dollars per pound) {'memberUomFr': 'Dollars par livre'}
    _1999_100 = 12  # (1999=100) {'memberUomFr': '1999=100'}
    DOLLARS_PER_TON = 120  # (Dollars per ton) {'memberUomFr': 'Dollars par tonne'}
    DOLLARS_PER_TONNE = 121  # (Dollars per tonne) {'memberUomFr': 'Dollars par tonne métrique'}
    DOLLARS_PER_TONNES = 122  # (Dollars per tonnes) {'memberUomFr': 'Dollars par tonnes métriques'}
    DOLLARS_PER_UNIT_OF_REAL_GDP = 123  # (Dollars per unit of real GDP) {'memberUomFr': 'Dollars par unité de PIB réel'}
    DOLLARS_1972_100 = 124  # (Dollars, 1972=100) {'memberUomFr': 'Dollars, 1972=100'}
    DOLLARS_1981_100 = 125  # (Dollars, 1981=100) {'memberUomFr': 'Dollars, 1981=100'}
    DOLLARS_1982_100 = 126  # (Dollars, 1982=100) {'memberUomFr': 'Dollars, 1982=100'}
    DOLLARS_1986_100 = 127  # (Dollars, 1986=100) {'memberUomFr': 'Dollars, 1986=100'}
    DOLLARS_1992 = 128  # (Dollars, 1992) {'memberUomFr': 'Dollars, 1992'}
    DOZENS = 129  # (Dozens) {'memberUomFr': 'Douzaines'}
    _2000_100 = 13  # (2000=100) {'memberUomFr': '2000=100'}
    DOZENS_PER_PERSON_PER_YEAR = 130  # (Dozens per person, per year) {'memberUomFr': 'Douzaines par personne, par année'}
    DURATION = 131  # (Duration) {'memberUomFr': 'Durée'}
    EGGS = 132  # (Eggs) {'memberUomFr': 'Oeufs'}
    EMPLOYEES = 133  # (Employees) {'memberUomFr': 'Employés'}
    EMPLOYEES_1 = 134  # (Employees) {'memberUomFr': 'Travailleurs'}
    ENTERPRISES = 135  # (Enterprises) {'memberUomFr': 'Entreprises'}
    ESTABLISHMENTS = 136  # (Establishments) {'memberUomFr': 'Établissements'}
    EVENINGS = 137  # (Evenings) {'memberUomFr': 'Soirées'}
    FAMILIES = 138  # (Families) {'memberUomFr': 'Familles'}
    FIRMS = 139  # (Firms) {'memberUomFr': 'Entreprises'}
    _2002_CONSTANT_DOLLARS = 14  # (2002 constant dollars) {'memberUomFr': 'Dollars constants de 2002'}
    FOREIGN_BORN_PERSONS = 140  # (Foreign-born persons) {'memberUomFr': "Personnes nées à l'étranger"}
    FULL_TIME_EQUIVALENT = 141  # (Full-time equivalent) {'memberUomFr': 'Équivalence temps plein'}
    GALLONS = 142  # (Gallons) {'memberUomFr': 'Gallons'}
    GIGAJOULES = 143  # (Gigajoules) {'memberUomFr': 'Gigajoules'}
    GIGAJOULES_PER_THOUSAND_CURRENT_DOLLARS_OF_PRODUCTION = 144  # (Gigajoules per thousand current dollars of production) {'memberUomFr': 'Gigajoules par millier de dollars courants de production'}
    GIGALITRES = 145  # (Gigalitres) {'memberUomFr': 'Gigalitres'}
    GIGAWATT_HOURS = 146  # (Gigawatt hours) {'memberUomFr': 'Gigawatt-heures'}
    GRAMS = 147  # (Grams) {'memberUomFr': 'Grammes'}
    HEAD = 148  # (Head) {'memberUomFr': 'Tête'}
    HECTARES = 149  # (Hectares) {'memberUomFr': 'Hectares'}
    _2002_2003_CONSTANT_DOLLARS = 15  # (2002/2003 constant dollars) {'memberUomFr': 'Dollars constants de 2002-2003'}
    HIGH_95_CONFIDENCE_INTERVAL = 150  # (High 95% confidence interval) {'memberUomFr': "Limite supérieure de l'intervalle de confiance de 95 %"}
    HOGS = 151  # (Hogs) {'memberUomFr': 'Porcs'}
    HOURS = 152  # (Hours) {'memberUomFr': 'Heures'}
    HOURS_IN_THOUSANDS = 153  # (Hours in thousands) {'memberUomFr': 'Heures en milliers'}
    HOUSEHOLDS = 154  # (Households) {'memberUomFr': 'Ménages'}
    HUNDREDWEIGHT = 155  # (Hundredweight) {'memberUomFr': 'Poids de cent douze livres'}
    HUNDREDWEIGHT_1 = 156  # (Hundredweight) {'memberUomFr': 'Poids de cent livres'}
    HUNDREDWEIGHT_2 = 157  # (Hundredweight) {'memberUomFr': 'Quintaux'}
    HUNDREDWEIGHT_PER_ACRE = 158  # (Hundredweight per acre) {'memberUomFr': 'Quintaux par acre'}
    HUNDREDWEIGHT_PER_HARVESTED_ACRES = 159  # (Hundredweight per harvested acres) {'memberUomFr': "Quintaux à l'acre récolté"}
    _200212_100 = 16  # (200212=100) {'memberUomFr': '200212=100'}
    INDEX = 160  # (Index) {'memberUomFr': 'Indice'}
    INDEX_1926_100 = 161  # (Index, 1926=100) {'memberUomFr': 'Indice, 1926=100'}
    INDEX_1948_100_1968_100 = 162  # (Index, 1948=100/1968=100) {'memberUomFr': 'Indices, 1948=100/1968=100'}
    INDEX_1961_100 = 163  # (Index, 1961=100) {'memberUomFr': 'Indice, 1961=100'}
    INDEX_1967_100 = 164  # (Index, 1967=100) {'memberUomFr': 'Indice, 1967=100'}
    INDEX_1971_100 = 165  # (Index, 1971=100) {'memberUomFr': 'Indice, 1971=100'}
    INDEX_1972_100 = 166  # (Index, 1972=100) {'memberUomFr': 'Indice, 1972=100'}
    INDEX_1975_1000 = 167  # (Index, 1975=1000) {'memberUomFr': 'Indice, 1975=1000'}
    INDEX_1977_100 = 168  # (Index, 1977=100) {'memberUomFr': 'Indice, 1977=100'}
    INDEX_1981_100 = 169  # (Index, 1981=100) {'memberUomFr': 'Indice, 1981=100'}
    _2002_100 = 17  # (2002=100) {'memberUomFr': '2002=100'}
    INDEX_1982_84_100 = 170  # (Index, 1982-84=100) {'memberUomFr': 'Indice, 1982-84=100'}
    INDEX_1986_100 = 171  # (Index, 1986=100) {'memberUomFr': 'Indice, 1986=100'}
    INDEX_1990_100 = 172  # (Index, 1990=100) {'memberUomFr': 'Indice, 1990=100'}
    INDEX_1992_100 = 173  # (Index, 1992=100) {'memberUomFr': 'Indice, 1992=100'}
    INDEX_199712_100 = 174  # (Index, 199712=100) {'memberUomFr': 'Indice, 199712=100'}
    INDEX_1997_100 = 175  # (Index, 1997=100) {'memberUomFr': 'Indice, 1997=100'}
    INDEX_2000_1000 = 176  # (Index, 2000=1000) {'memberUomFr': 'Indice, 2000=1000'}
    INDEX_2001_100 = 177  # (Index, 2001=100) {'memberUomFr': 'Indice, 2001=100'}
    INDEX_2002_100 = 178  # (Index, 2002=100) {'memberUomFr': 'Indice, 2002=100'}
    INDEX_2003_100 = 179  # (Index, 2003=100) {'memberUomFr': 'Indice, 2003=100'}
    _2007_CONSTANT_DOLLARS = 18  # (2007 constant dollars) {'memberUomFr': 'Dollars constants de 2007'}
    INDEX_2006_100 = 180  # (Index, 2006=100) {'memberUomFr': 'Indice, 2006=100'}
    INDEX_2007_100 = 181  # (Index, 2007=100) {'memberUomFr': 'Indice, 2007=100'}
    INDEX_2008_100 = 182  # (Index, 2008=100) {'memberUomFr': 'Indice, 2008=100'}
    INDEX_2009_100 = 183  # (Index, 2009=100) {'memberUomFr': 'Indice, 2009=100'}
    INDEX_2010_100 = 184  # (Index, 2010=100) {'memberUomFr': 'Indice, 2010=100'}
    INDEX_2011_100 = 185  # (Index, 2011=100) {'memberUomFr': 'Indice, 2011=100'}
    INDEX_2013_100 = 186  # (Index, 2013=100) {'memberUomFr': 'Indice, 2013=100'}
    INDEX_82_90_100 = 187  # (Index, 82-90=100) {'memberUomFr': 'Indice, 82-90=100'}
    INDEX_COMBINED_CITY_AVERAGE_100 = 188  # (Index, combined city average=100) {'memberUomFr': 'Indice, moyenne des villes combinées=100'}
    INDEX1992_100 = 189  # (Index,1992=100) {'memberUomFr': 'Indice, 1992=100'}
    _200704_100 = 19  # (200704=100) {'memberUomFr': '200704=100'}
    JOBS = 190  # (Jobs) {'memberUomFr': 'Emplois'}
    KILOCALORIES = 191  # (Kilocalories) {'memberUomFr': 'Kilocalories'}
    KILOGRAMS = 192  # (Kilograms) {'memberUomFr': 'Kilogrammes'}
    KILOGRAMS_PER_HECTARE = 193  # (Kilograms per hectare) {'memberUomFr': 'Kilogrammes par hectare'}
    KILOGRAMS_PER_PERSON_PER_YEAR = 194  # (Kilograms per person, per year) {'memberUomFr': 'Kilogrammes par personne, par année'}
    KILOLITRES = 195  # (Kilolitres) {'memberUomFr': 'Kilolitres'}
    KILOMETRES = 196  # (Kilometres) {'memberUomFr': 'Kilomètres'}
    KILOMETRES_PER_HOUR = 197  # (Kilometres per hour) {'memberUomFr': 'Kilomètres par heure'}
    KILOTONNES = 198  # (Kilotonnes) {'memberUomFr': 'Kilotonnes'}
    KILOWATT_HOURS = 199  # (Kilowatt-hours) {'memberUomFr': 'Kilowattheures'}
    _198203_100 = 2  # (198203=100) {'memberUomFr': '198203=100'}
    _2007_100 = 20  # (2007=100) {'memberUomFr': '2007=100'}
    KILOWATTS = 200  # (Kilowatts) {'memberUomFr': 'Kilowatts'}
    LAYERS = 201  # (Layers) {'memberUomFr': 'Pondeuses'}
    LINES = 202  # (Lines) {'memberUomFr': 'Lignes'}
    LITRES = 203  # (Litres) {'memberUomFr': 'Litres'}
    LITRES_ABSOLUTE_ALCOHOL = 204  # (Litres absolute alcohol) {'memberUomFr': "Litres d'alcool absolu"}
    LITRES_PER_PERSON_PER_YEAR = 205  # (Litres per person, per year) {'memberUomFr': 'Litres par personne, par année'}
    LOW_95_CONFIDENCE_INTERVAL = 206  # (Low 95% confidence interval) {'memberUomFr': "Limite inférieure de l'intervalle de confiance de 95 %"}
    MEAN_NUMBER = 207  # (Mean number) {'memberUomFr': 'Nombre moyen'}
    MEGALITRES = 208  # (Megalitres) {'memberUomFr': 'Mégalitres'}
    MEGATONNES = 209  # (Megatonnes) {'memberUomFr': 'Mégatonnes'}
    _2010_100 = 21  # (2010=100) {'memberUomFr': '2010=100'}
    MEGAWATT_HOURS = 210  # (Megawatt hours) {'memberUomFr': 'Mégawatt heures'}
    MESSAGE = 211  # (Message) {'memberUomFr': 'Appel'}
    METRIC_BUNDLES = 212  # (Metric bundles) {'memberUomFr': 'Paquets métriques'}
    METRIC_ROLLS = 213  # (Metric rolls) {'memberUomFr': 'Rouleaux métriques'}
    METRIC_TONNES = 214  # (Metric tonnes) {'memberUomFr': 'Tonnes métriques'}
    METRIC_UNITS = 215  # (Metric units) {'memberUomFr': 'Unités métriques'}
    MICROGRAMS = 216  # (Micrograms) {'memberUomFr': 'Microgrammes'}
    MILLIGRAMS = 217  # (Milligrams) {'memberUomFr': 'Milligrammes'}
    MILLIMETRES = 218  # (Millimetres) {'memberUomFr': 'Millimètres'}
    MINUTES = 219  # (Minutes) {'memberUomFr': 'Minutes'}
    _201104_100 = 22  # (201104=100) {'memberUomFr': '201104=100'}
    MONTHS = 220  # (Months) {'memberUomFr': 'Mois'}
    MONTH_DAY = 221  # (Month/day) {'memberUomFr': 'Mois/jour'}
    NATIONAL_CURRENCY_PER_CANADIAN_DOLLAR = 222  # (National currency per Canadian dollar) {'memberUomFr': 'Monnaie nationale par dollar canadien'}
    NUMBER = 223  # (Number) {'memberUomFr': 'Nombre'}
    NIACIN_EQUIVALENT = 224  # (Niacin equivalent) {'memberUomFr': 'Équivalent en niacine'}
    NIGHTS = 225  # (Nights) {'memberUomFr': 'Nuitées'}
    NUMBER_IN_THOUSANDS = 226  # (Number in thousands) {'memberUomFr': 'Nombre en milliers'}
    NUMBER_OF_FARMS_REPORTING = 227  # (Number of farms reporting) {'memberUomFr': "Nombre d'exploitations déclarantes"}
    NUMBER_OF_VISITS = 228  # (Number of visits) {'memberUomFr': 'Nombre de visites'}
    NUMBER_PER_SQUARE_KILOMETRE = 229  # (Number per square kilometre) {'memberUomFr': 'Nombre par kilomètre carré'}
    _2012_CONSTANT_DOLLARS = 23  # (2012 constant dollars) {'memberUomFr': 'Dollars constants de 2012'}
    OTHER_BRITISH_AND_FOREIGN_BORN_PERSONS = 230  # (Other British- and foreign-born persons) {'memberUomFr': "Personnes nées dans un autre pays britannique et à l'étranger"}
    OTHER_BRITISH_BORN_PERSONS = 231  # (Other British-born persons) {'memberUomFr': 'Personnes nées dans un autre pays britannique'}
    OVEN_DRY_METRIC_TONNES = 232  # (Oven-dry metric tonnes) {'memberUomFr': 'Tonnes métriques séchées au four'}
    PAIRS = 233  # (Pairs) {'memberUomFr': 'Paires'}
    PASSENGER_KILOMETRES = 234  # (Passenger-kilometres) {'memberUomFr': 'Passagers-kilomètres'}
    PASSENGER_KILOMETRES_1 = 235  # (Passenger-kilometres) {'memberUomFr': 'Voyageur-kilomètres'}
    PASSENGERS = 236  # (Passengers) {'memberUomFr': 'Passagers'}
    PASSENGERS_1 = 237  # (Passengers) {'memberUomFr': 'Voyageurs'}
    PASSENGERS_MILES = 238  # (Passengers-miles) {'memberUomFr': 'Voyageurs-mille'}
    PERCENT = 239  # (Percent) {'memberUomFr': 'Pourcent'}
    _2012_01_100 = 24  # (2012/01=100) {'memberUomFr': '2012/01=100'}
    PERCENT_CHANGE_1986_100 = 240  # (Percent change (1986=100)) {'memberUomFr': 'Variation en pourcentage (1986=100)'}
    PERCENT_CHANGE_1992_100 = 241  # (Percent change (1992=100)) {'memberUomFr': 'Variation en pourcentage (1992=100)'}
    PERCENTAGE = 242  # (Percentage) {'memberUomFr': 'Pourcentage'}
    PERCENTAGE_OF_GROSS_DOMESTIC_INCOME = 243  # (Percentage of gross domestic income) {'memberUomFr': 'Pourcentage du revenu intérieur brut'}
    PERCENTAGE_OF_GROSS_DOMESTIC_PRODUCT = 244  # (Percentage of gross domestic product) {'memberUomFr': 'Pourcentage du produit intérieur brut'}
    PERCENTAGE_OF_HOUSEHOLDS = 245  # (Percentage of households) {'memberUomFr': 'Pourcentage des ménages'}
    PERCENTAGE_SHARE = 246  # (Percentage share) {'memberUomFr': 'Part en pourcentage'}
    PERSON_TRIPS = 247  # (Person-trips) {'memberUomFr': 'Voyages-personnes'}
    PERSON_VISITS = 248  # (Person-visits) {'memberUomFr': 'Visites-personnes'}
    PERSONS = 249  # (Persons) {'memberUomFr': 'Personnes'}
    _2013_100 = 25  # (2013=100) {'memberUomFr': '2013=100'}
    PETAJOULES = 250  # (Petajoules) {'memberUomFr': 'Pétajoules'}
    POINT = 251  # (Point) {'memberUomFr': 'Point'}
    POLICIES = 252  # (Policies) {'memberUomFr': 'Polices'}
    POULTS = 253  # (Poults) {'memberUomFr': 'Dindonneau'}
    POUNDS = 254  # (Pounds) {'memberUomFr': 'Livres'}
    POUNDS_OF_MILK = 255  # (Pounds of milk) {'memberUomFr': 'Livres de lait'}
    POUNDS_PER_ACRE = 256  # (Pounds per acre) {'memberUomFr': 'Livres par acre'}
    RATE = 257  # (Rate) {'memberUomFr': 'Taux'}
    RATE_PER_1000_BIRTHS = 258  # (Rate per 1,000 births) {'memberUomFr': 'Taux pour 1 000 naissances'}
    RATE_PER_1000_LEGALLY_MARRIED_FEMALES = 259  # (Rate per 1,000 legally married females) {'memberUomFr': 'Taux pour 1 000 femmes mariées légalement'}
    ACCESS_LINES = 26  # (Access lines) {'memberUomFr': "Lignes d'accès"}
    RATE_PER_1000_LEGALLY_MARRIED_MALES = 260  # (Rate per 1,000 legally married males) {'memberUomFr': 'Taux pour 1 000 hommes mariés légalement'}
    RATE_PER_1000_LIVE_BIRTHS = 261  # (Rate per 1,000 live births) {'memberUomFr': 'Taux pour 1 000 naissances vivantes'}
    RATE_PER_1000_MALES = 262  # (Rate per 1,000 males) {'memberUomFr': 'Taux pour 1 000 hommes'}
    RATE_PER_1000_MARRIAGES = 263  # (Rate per 1,000 marriages) {'memberUomFr': 'Taux pour 1 000 mariages'}
    RATE_PER_1000_TOTAL_BIRTHS = 264  # (Rate per 1,000 total births) {'memberUomFr': 'Taux pour 1 000 naissances totales'}
    RATE_PER_100000_POPULATION = 265  # (Rate per 100,000 population) {'memberUomFr': 'Taux pour 100 000 personnes'}
    RATES_PER_1000_FEMALES = 266  # (Rates per 1,000 females) {'memberUomFr': 'Taux pour 1 000 femmes'}
    RATES_PER_1000_POPULATION = 267  # (Rates per 1,000 population) {'memberUomFr': 'Taux pour 1 000 personnes'}
    RATES_PER_1000_UNMARRIED_FEMALES = 268  # (Rates per 1,000 unmarried females) {'memberUomFr': 'Taux pour 1 000 femmes non mariées'}
    RATES_PER_1000_UNMARRIED_MALES = 269  # (Rates per 1,000 unmarried males) {'memberUomFr': 'Taux pour 1 000 hommes non mariés'}
    ACCIDENTS = 27  # (Accidents) {'memberUomFr': 'Accidents'}
    RATIO = 270  # (Ratio) {'memberUomFr': 'Rapport'}
    RATIO_1 = 271  # (Ratio) {'memberUomFr': 'Ratio'}
    RATIO_2 = 272  # (Ratio) {'memberUomFr': 'Taux'}
    RECORDS = 273  # (Records) {'memberUomFr': 'Disques'}
    RETINOL_EQUIVALENT = 274  # (Retinol equivalent) {'memberUomFr': 'Équivalent rétinol'}
    SEAT_KILOMETRES = 275  # (Seat-kilometres) {'memberUomFr': 'Sièges-kilomètres'}
    SHARES = 276  # (Shares) {'memberUomFr': 'Actions'}
    SHARES_1 = 277  # (Shares) {'memberUomFr': 'Parts'}
    SHELTERS = 278  # (Shelters) {'memberUomFr': 'Refuges'}
    SQUARE_FEET = 279  # (Square feet) {'memberUomFr': 'Pieds carrés'}
    ACRES = 28  # (Acres) {'memberUomFr': 'Acres'}
    SQUARE_KILOMETRES = 280  # (Square kilometres) {'memberUomFr': 'Kilomètres carrés'}
    SQUARE_METRES = 281  # (Square metres) {'memberUomFr': 'Mètres carrés'}
    TAPES = 282  # (Tapes) {'memberUomFr': 'Rubans'}
    TERAJOULES = 283  # (Terajoules) {'memberUomFr': 'Térajoules'}
    THOUSANDS_OF_DOLLARS = 284  # (Thousands of dollars) {'memberUomFr': 'Milliers de dollars'}
    TONNE_KILOMETRES = 285  # (Tonne-kilometres) {'memberUomFr': 'Tonnes-kilomètres'}
    TONNE_MILES = 286  # (Tonne-miles) {'memberUomFr': 'Tonne-mille'}
    TONNES = 287  # (Tonnes) {'memberUomFr': 'Tonnes'}
    TONNES_1 = 288  # (Tonnes) {'memberUomFr': 'Tonnes métriques'}
    TONNES_OF_OIL_EQUIVALENT = 289  # (Tonnes of oil equivalent) {'memberUomFr': 'Équivalent des tonnes du pétrole'}
    AGE_SEX_STANDARDIZED_RATE_PER_100000_POPULATION = 29  # (Age-sex-standardized rate per 100,000 population) {'memberUomFr': "Taux normalisé selon l'âge et le sexe pour 100 000 personnes"}
    TONNES_PER_THOUSAND_CURRENT_DOLLARS_OF_PRODUCTION = 290  # (Tonnes per thousand current dollars of production) {'memberUomFr': 'Tonnes par millier de dollars courants de production'}
    TONS = 291  # (Tons) {'memberUomFr': 'Tonnes'}
    TONS_1 = 292  # (Tons) {'memberUomFr': 'Tonnes impériales'}
    TONS_PER_ACRE = 293  # (Tons per acre) {'memberUomFr': 'Tonnes par acre'}
    TROY_OUNCES = 294  # (Troy ounces) {'memberUomFr': 'Onces troy'}
    TWENTY_FEET_EQUIVALENT_UNITS = 295  # (Twenty feet equivalent units) {'memberUomFr': 'Unités équivalent à vingt pieds'}
    US_DOLLARS_PER_UNIT_OF_REAL_GDP = 296  # (US dollars per unit of real GDP) {'memberUomFr': 'Dollars américains par unité de PIB réel'}
    UNITED_STATES_DOLLARS = 297  # (United States Dollars) {'memberUomFr': 'Dollars des États-Unis'}
    UNITED_STATES_DOLLARS_1 = 298  # (United States dollars) {'memberUomFr': 'Dollars des États-Unis'}
    UNITED_STATES_DOLLARS_PER_CANADIAN_DOLLAR = 299  # (United States dollars per Canadian dollar) {'memberUomFr': 'Dollars États-Unis par dollar canadien'}
    _1986_100 = 3  # (1986=100) {'memberUomFr': '1986=100'}
    AGE_STANDARDIZED_RATE_PER_100000_POPULATION = 30  # (Age-standardized rate per 100,000 population) {'memberUomFr': "Taux normalisé selon l'âge pour 100 000 personnes"}
    UNITS = 300  # (Units) {'memberUomFr': 'Unités'}
    VEHICLE_KILOMETRES = 301  # (Vehicle-kilometres) {'memberUomFr': 'Véhicule-kilomètres'}
    VEHICLES = 302  # (Vehicles) {'memberUomFr': 'Véhicules'}
    WEEKS = 303  # (Weeks) {'memberUomFr': 'Semaines'}
    WEIGHTS = 304  # (Weights) {'memberUomFr': 'Pondérations'}
    WEIGHTS_1986_100 = 305  # (Weights, 1986=100) {'memberUomFr': 'Pondérations, 1986=100'}
    WEIGHTS_1997_100 = 306  # (Weights, 1997=100) {'memberUomFr': 'Pondérations, 1997=100'}
    WOMEN = 307  # (Women) {'memberUomFr': 'Femmes'}
    YEARS = 308  # (Years) {'memberUomFr': 'Années'}
    DOLLARS_2002 = 309  # (Dollars, 2002) {'memberUomFr': 'Dollars, 2002'}
    AGREEMENTS = 31  # (Agreements) {'memberUomFr': 'Conventions'}
    MICROGRAMS_PER_LITRE_ΜG_L = 310  # (Micrograms per litre (µg/L)) {'memberUomFr': 'Microgrammes par litre (µg/L)'}
    MINUTES_PER_DAY = 311  # (Minutes per day) {'memberUomFr': 'Minutes par jour'}
    NANOGRAMS_PER_MILLILITRE_NG_ML = 312  # (Nanograms per millilitre (ng/mL)) {'memberUomFr': 'Nanogrammes par millilitre (ng/mL)'}
    NANOMOLES_PER_LITRE_NMOL_L = 313  # (Nanomoles per litre (nmol/L)) {'memberUomFr': 'Nanomoles par litre (nmol/L)'}
    _2013_CONSTANT_DOLLARS = 314  # (2013 constant dollars) {'memberUomFr': 'Dollars constants de 2013'}
    DOLLARS_PER_HEAD = 315  # (Dollars per head) {'memberUomFr': 'Dollars par pomme'}
    QUARTS = 316  # (Quarts) {'memberUomFr': 'Pintes'}
    DOLLARS_PER_THOUSAND_CUBIC_METRES = 317  # (Dollars per thousand cubic metres) {'memberUomFr': 'Dollars par millier de mètres cubes'}
    LITRES_PER_PERSON_PER_DAY = 318  # (Litres per person per day) {'memberUomFr': 'Litres par personne par jour'}
    TWENTY_FEET_EQUIVALENT_UNITS_1 = 319  # (Twenty feet equivalent units ) {'memberUomFr': 'Unités équivalent à vingt pieds '}
    AVERAGE_HOURS_PER_DAY = 32  # (Average hours per day) {'memberUomFr': 'Moyenne des heures par jour'}
    GIGAJOULES_PER_THOUSAND_CUBIC_METRES = 320  # (Gigajoules per thousand cubic metres) {'memberUomFr': 'Gigajoules par millier de mètres cubes'}
    _2007_CHAINED_DOLLARS = 321  # (2007 chained dollars) {'memberUomFr': 'Dollars enchaînés 2007'}
    _2014_CONSTANT_DOLLARS = 322  # (2014 constant dollars) {'memberUomFr': 'Dollars constants de 2014'}
    CUBIC_KILOMETRES = 323  # (Cubic kilometres) {'memberUomFr': 'Kilomètres cubes'}
    _2015_100 = 324  # (2015=100) {'memberUomFr': '2015=100'}
    WEIGHT_IN_CARATS = 325  # (Weight in carats) {'memberUomFr': 'Poids en carats'}
    NUMBER_OF_GROSS = 326  # (Number of gross) {'memberUomFr': 'Nombre en grosses'}
    VOLUME_IN_HECTOLITRES = 327  # (Volume in hectolitres) {'memberUomFr': 'Volume en hectolitres'}
    WEIGHT_IN_KILOGRAMS_OF_NAMED_SUBSTANCE = 328  # (Weight in kilograms of named substance) {'memberUomFr': 'Poids en kilogrammes de la matière mentionnée'}
    WEIGHT_IN_AIR_DRY_KILOGRAMS = 329  # (Weight in air dry kilograms) {'memberUomFr': "Poids en kilogrammes séchés à l'air"}
    BANKRUPTCIES = 33  # (Bankruptcies) {'memberUomFr': 'Faillites'}
    VOLUME_IN_LITRES_OF_PURE_ALCOHOL = 330  # (Volume in litres of pure alcohol) {'memberUomFr': "Volume en litres d'alcool pur"}
    VOLUME_IN_LITRES = 331  # (Volume in litres) {'memberUomFr': 'Volume en litres'}
    AREA_IN_SQUARE_METRES = 332  # (Area in square metres) {'memberUomFr': 'Superficie en mètres carrés'}
    VOLUME_IN_CUBIC_METRES = 333  # (Volume in cubic metres) {'memberUomFr': 'Volume en mètres cubes'}
    LENGTH_IN_METRES = 334  # (Length in metres) {'memberUomFr': 'Longueurs en mètres'}
    MEGAWATT_HOUR = 335  # (Megawatt-Hour) {'memberUomFr': 'Mégawattheure'}
    NUMBER_OF_PACKAGES = 336  # (Number of packages) {'memberUomFr': 'Nombre de paquets'}
    THOUSANDS_OF_CUBIC_METRES = 337  # (Thousands of cubic metres) {'memberUomFr': 'Milliers de mètres cubes'}
    WEIGHT_IN_METRIC_TONNE = 338  # (Weight in metric tonne) {'memberUomFr': 'Poids en tonne métrique'}
    METRIC_TONNE_AIR_DRY = 339  # (Metric tonne air dry) {'memberUomFr': "Tonne métrique séchée à l'air"}
    BARRELS = 34  # (Barrels) {'memberUomFr': 'Barils'}
    NUMBER_OF_DOZENS = 340  # (Number of dozens) {'memberUomFr': 'Nombre de douzaines'}
    WEIGHT_IN_GRAMS = 341  # (Weight in grams) {'memberUomFr': 'Poids en grammes'}
    WEIGHT_IN_KILOGRAMS = 342  # (Weight in kilograms) {'memberUomFr': 'Poids en kilogrammes'}
    BLANK = 343  # (Blank) {'memberUomFr': 'Blanc'}
    NUMBER_OF_PAIRS = 344  # (Number of pairs) {'memberUomFr': 'Nombre de paires'}
    _2015_CONSTANT_DOLLARS = 345  # (2015 constant dollars) {'memberUomFr': 'Dollars constants de 2015'}
    _2014_100 = 346  # (2014=100) {'memberUomFr': '2014=100'}
    INDEX_201612_100 = 347  # (Index, 201612=100) {'memberUomFr': 'Indice, 201612=100'}
    INDEX_2012_100 = 348  # (Index, 2012=100) {'memberUomFr': 'Indice, 2012=100'}
    AVAILABLE_SEAT_KILOMETRES = 349  # (Available seat-kilometres) {'memberUomFr': 'Sièges-kilomètres disponibles'}
    BARRELS_PER_DAY = 35  # (Barrels per day) {'memberUomFr': 'Barils par jour'}
    _2016_CONSTANT_DOLLARS = 350  # (2016 constant dollars) {'memberUomFr': 'Dollars constants de 2016'}
    INDEX_2014_100 = 351  # (Index, 2014=100) {'memberUomFr': 'Indice, 2014=100'}
    NANOGRAMS_PER_LITRE_NG_L = 352  # (Nanograms per litre (ng/L)) {'memberUomFr': 'Nanogrammes par litre (ng/L)'}
    MICROMOLES_PER_MILLIMOLE_ΜMOL_MMOL = 353  # (Micromoles per millimole (µmol/mmol)) {'memberUomFr': 'Micromoles par millimole (µmol/mmol)'}
    MICROMOLES_PER_LITRE_ΜMOL_L = 354  # (Micromoles per litre (µmol/L)) {'memberUomFr': 'Micromoles par litre (µmol/L)'}
    MILLIGRAMS_PER_LITRE_MG_L = 355  # (Milligrams per Litre (mg/L)) {'memberUomFr': 'Milligrammes par litre (mg/L)'}
    MICROGRAMS_PER_CUBIC_METRE_ΜG_M3 = 356  # (Micrograms per cubic metre (µg/m3)) {'memberUomFr': 'Microgrammes par mètre cube (µg/m3)'}
    M_FT_B_M = 357  # (M.ft.b.m) {'memberUomFr': 'Milliers de PMP'}
    BASIS_POINTS = 358  # (Basis points) {'memberUomFr': 'Points de base'}
    DOLLARS_PER_GRAM = 359  # (Dollars per gram) {'memberUomFr': 'Dollars par gramme'}
    BENEFIT_PERIODS = 36  # (Benefit periods) {'memberUomFr': 'Périodes de prestations'}
    CENTIMETRES = 360  # (Centimetres) {'memberUomFr': 'Centimètres'}
    KILOGRAMS_PER_METRE_SQUARED = 361  # (Kilograms per metre squared) {'memberUomFr': 'Kilogrammes par mètre carré'}
    MILLILITRES_PER_KILOGRAM_PER_MINUTE = 362  # (Millilitres per kilogram per minute) {'memberUomFr': 'Millilitres par kilogramme par minute'}
    MILLIMETRES_OF_MERCURY = 363  # (Millimetres of mercury) {'memberUomFr': 'Millimtres de mercure'}
    BEATS_PER_MINUTE = 364  # (Beats per minute) {'memberUomFr': 'Battements par minute'}
    GRAMS_PER_LITRE = 365  # (Grams per litre) {'memberUomFr': 'Grammes par litre'}
    MILLIMOLES_PER_LITRE = 366  # (Millimoles per litre) {'memberUomFr': 'Milimoles par litre'}
    BILLIONS_PER_LITRE = 367  # (Billions per litre) {'memberUomFr': 'Milliards par litre'}
    PICOMOLES_PER_LITRE = 368  # (Picomoles per litre) {'memberUomFr': 'Picomoles par litre'}
    MILLI_INTERNATIONAL_UNITS_PER_LITRE = 369  # (Milli-international units per litre) {'memberUomFr': 'Milli-units internationale par litre'}
    BIRDS = 37  # (Birds) {'memberUomFr': 'Oiseaux'}
    CONSTANT_DOLLARS = 370  # (Constant dollars) {'memberUomFr': 'Dollars constants'}
    NUMBER_OF_FARMS = 371  # (Number of farms) {'memberUomFr': "Nombre d'exploitations"}
    FARM_OPERATORS = 372  # (Farm operators) {'memberUomFr': 'Exploitants agricoles'}
    INDEX_2017_100 = 373  # (Index, 2017=100) {'memberUomFr': 'Indice, 2017=100'}
    INDEX_2015_100 = 374  # (Index, 2015=100) {'memberUomFr': 'Indice, 2015=100'}
    _1997_CHAINED_DOLLARS = 375  # (1997 chained dollars) {'memberUomFr': 'En dollars enchaînés 1997'}
    NUMBER_INDICES_OF_CHANGE = 376  # (Number, indices of change) {'memberUomFr': 'Nombre, indices de variation'}
    PER_DOLLAR_OF_OUTPUT = 377  # (Per dollar of output) {'memberUomFr': 'Par dollar de production'}
    PER_MILLION_DOLLARS_OF_OUTPUT = 378  # (Per million dollars of output) {'memberUomFr': 'Par million de dollar de production'}
    AVERAGE_YEARS = 379  # (Average years) {'memberUomFr': 'Moyenne des années'}
    BIRTHS = 38  # (Births) {'memberUomFr': 'Naissances'}
    GRAMS_PER_DAY = 380  # (Grams per day) {'memberUomFr': 'Grammes par jour'}
    _2012_CHAINED_DOLLARS = 381  # (2012 chained dollars) {'memberUomFr': 'Dollars enchaînes 2012'}
    CHAINED_2012_DOLLARS_PER_HOUR = 382  # (Chained (2012) dollars per hour) {'memberUomFr': 'Dollars enchaînés (2012) par heure'}
    _2012_100 = 383  # (2012=100) {'memberUomFr': '2012=100'}
    UNITS_PER_LITRE = 384  # (Units per litre) {'memberUomFr': 'Unités par litre'}
    CENTS_PER_DOZEN = 385  # (Cents per dozen) {'memberUomFr': 'Cents par douzaine'}
    INDEX_2016_100 = 386  # (Index, 2016=100) {'memberUomFr': 'Indice, 2016=100'}
    _2017_CONSTANT_DOLLARS = 387  # (2017 constant dollars) {'memberUomFr': 'Dollars constants de 2017'}
    _201812_100 = 388  # (201812=100) {'memberUomFr': '201812=100'}
    _2011_CONSTANT_DOLLARS = 389  # (2011 constant dollars) {'memberUomFr': 'Dollars constants de 2011'}
    BLOCKS = 39  # (Blocks) {'memberUomFr': 'Blocs'}
    _2018_100 = 390  # (2018=100) {'memberUomFr': '2018=100'}
    CHAINED_2012_DOLLARS_IN_THOUSANDS = 391  # (Chained (2012) dollars in thousands) {'memberUomFr': 'Dollars enchaînés (2012) en milliers'}
    LITRES_PER_LITRE = 392  # (Litres per litre) {'memberUomFr': 'Litres par litre'}
    FEMTOLITRES = 393  # (Femtolitres) {'memberUomFr': 'Femtolitres'}
    NANOMOLES_PER_MILLIMOLE_NMOL_MMOL = 394  # (Nanomoles per millimole (nmol/mmol)) {'memberUomFr': 'Nanomoles par millimole (nmol/mmol)'}
    RATE_PER_100000_LIVE_BIRTHS = 395  # (Rate per 100,000 live births) {'memberUomFr': 'Taux pour 100 000 naissances vivantes'}
    PERCENTAGE_POINT = 396  # (Percentage point) {'memberUomFr': 'Point de pourcentage'}
    AGE_STANDARDIZED_RATE_PER_100000_PERSON_YEARS_AT_RISK = 397  # (Age-standardized rate per 100,000 person-years at risk) {'memberUomFr': 'Taux normalisés selon l’âge pour 100 000 années-personnes à risque'}
    INDEX_2018_100 = 398  # (Index, 2018=100) {'memberUomFr': 'Indice, 2018=100'}
    CARATS = 399  # (Carats) {'memberUomFr': 'Carats'}
    _198812_100 = 4  # (198812=100) {'memberUomFr': '198812=100'}
    BOARD_FEET = 40  # (Board feet) {'memberUomFr': 'Pied planche'}
    _2018_CONSTANT_DOLLARS = 400  # (2018 constant dollars) {'memberUomFr': 'Dollars constants de 2018'}
    _2019_100 = 401  # (2019=100) {'memberUomFr': '2019=100'}
    _2017_100 = 402  # (2017=100) {'memberUomFr': '2017=100'}
    INDEX_202001_100 = 403  # (Index, 202001=100) {'memberUomFr': 'Indice, 202001=100'}
    _2019_CONSTANT_DOLLARS = 404  # (2019 constant dollars) {'memberUomFr': 'Dollars constants de 2019'}
    INCIDENTS = 405  # (Incidents) {'memberUomFr': 'Incidents'}
    TONNES_PER_THOUSAND_DOLLARS = 406  # (Tonnes per thousand dollars) {'memberUomFr': 'Tonnes par milliers de dollars'}
    INDEX_VALUE_2019_0 = 407  # (Index value (2019=0)) {'memberUomFr': 'Valeur de l’index (2019=0)'}
    MEGAJOULES = 408  # (Megajoules) {'memberUomFr': 'Mégajoules'}
    FULL_CORDS = 409  # (Full cords) {'memberUomFr': 'Pleines cordes'}
    BRICKS = 41  # (Bricks) {'memberUomFr': 'Briques'}
    METRES = 410  # (Metres) {'memberUomFr': 'Mètres'}
    GRAMS_PER_ONE_MILLION_PEOPLE_PER_DAY = 411  # (Grams per one million people per day) {'memberUomFr': 'Grammes par million de personnes par jour'}
    KILONEWTONS_KN = 412  # (Kilonewtons (kN)) {'memberUomFr': 'Kilonewtons (kN)'}
    FORCE_PER_UNIT_MASS_M_S2 = 413  # (Force per unit mass (m/s2)) {'memberUomFr': 'Force par unite de masse (m/s2)'}
    KILOWATT_PER_KILOGRAM_KW_KG = 414  # (Kilowatt per kilogram (kW/kg)) {'memberUomFr': 'Kilowatt par kilogramme (kW/kg)'}
    METERS_PER_SECOND_M_S = 415  # (Meters per second (m/s)) {'memberUomFr': 'Mètres par seconde (m/s)'}
    MILLIGRAMS_PER_CUBIC_CENTIMETER_MG_CM3 = 416  # (Milligrams per cubic centimeter (mg/cm³)) {'memberUomFr': 'Milligrammes par centimètre cube (mg/cm³)'}
    SQUARE_MILLIMETERS_MM2 = 417  # (Square millimeters (mm2)) {'memberUomFr': 'Millimètres carré (mm2)'}
    TRAVELLERS = 418  # (Travellers) {'memberUomFr': 'Voyageurs'}
    VISITORS = 419  # (Visitors) {'memberUomFr': 'Visiteurs'}
    BUSHELS = 42  # (Bushels) {'memberUomFr': 'Boisseaux'}
    MILLIMOLES_PER_LITRE_MMOL_L = 420  # (Millimoles per litre (mmol/L)) {'memberUomFr': 'Millimoles par litre (mmol/L)'}
    WATTS_PER_KILOGRAM_W_KG = 421  # (Watts per kilogram (W/kg)) {'memberUomFr': 'Watts par kilogramme (W/kg)'}
    AVERAGE = 422  # (Average) {'memberUomFr': 'Moyenne'}
    AVERAGE_NUMBER = 423  # (Average number) {'memberUomFr': 'Nombre moyen'}
    RATE_PER_1000_MARRIED_PERSONS = 424  # (Rate per 1,000 married persons) {'memberUomFr': 'Taux pour 1 000 personnes mariées'}
    _2020_CONSTANT_DOLLARS = 425  # (2020 constant dollars) {'memberUomFr': 'Dollars constants de 2020'}
    INDEX_2019_100 = 426  # (Index, 2019=100) {'memberUomFr': 'Indice, 2019=100'}
    _202204_100 = 427  # (202204=100) {'memberUomFr': '202204=100'}
    PERSONS_IN_THOUSANDS = 428  # (Persons in thousands) {'memberUomFr': 'Personnes en milliers'}
    _2021_CONSTANT_DOLLARS = 429  # (2021 constant dollars) {'memberUomFr': 'Dollars constants de 2021'}
    BUSHELS_PER_ACRE = 43  # (Bushels per acre) {'memberUomFr': 'Boisseaux par acre'}
    INDEX_2020_100 = 430  # (Index, 2020=100) {'memberUomFr': 'Indice, 2020=100'}
    AVERAGE_PERCENTAGE = 431  # (Average percentage) {'memberUomFr': 'Pourcentage moyen'}
    RATE_PER_1000_PERSONS_OF_THE_SAME_MARITAL_STATUS = 432  # (Rate per 1,000 persons of the same marital status) {'memberUomFr': 'Taux pour 1000 personnes du même état matrimonial'}
    FEET = 433  # (Feet) {'memberUomFr': 'Pieds'}
    INDEX_2021_100 = 434  # (Index, 2021=100) {'memberUomFr': 'Indice, 2021=100'}
    _198901_100 = 435  # (198901=100) {'memberUomFr': '198901=100'}
    COUNT = 436  # (Count) {'memberUomFr': 'Nombre'}
    KILOMETRES_PER_SQUARE_KILOMETRE = 437  # (Kilometres per square kilometre) {'memberUomFr': 'Kilomètres par kilomètre carré'}
    _202304_100 = 438  # (202304=100) {'memberUomFr': '202304=100'}
    _2022_CONSTANT_DOLLARS = 439  # (2022 constant dollars) {'memberUomFr': 'Dollars constants de 2022'}
    BUSINESSES = 44  # (Businesses) {'memberUomFr': 'Entreprises'}
    _2017_CHAINED_DOLLARS = 440  # (2017 chained dollars) {'memberUomFr': 'Dollars enchaînés 2017'}
    TONNES_PER_HECTARE = 441  # (Tonnes per hectare) {'memberUomFr': 'Tonnes par hectare'}
    MILLIGRAMS_PER_ONE_THOUSAND_PEOPLE_PER_DAY_MG_1000_PEOPLE_DAY = 442  # (Milligrams per one thousand people per day (mg/1000 people/day)) {'memberUomFr': 'Milligrammes pour mille personnes par jour (milligrammes/1000 personnes/jour)'}
    COUNT_PER_HECTARE = 443  # (Count per hectare) {'memberUomFr': 'Nombre par hectare'}
    AVERAGE_NUMBER_OF_WEEKS = 444  # (Average number of weeks) {'memberUomFr': 'Nombre moyen de semaines'}
    CHAINED_2017_DOLLARS_IN_THOUSANDS = 445  # (Chained (2017) dollars in thousands) {'memberUomFr': 'Dollars enchaînés (2017) en milliers'}
    CHAINED_2017_DOLLARS_PER_HOUR = 446  # (Chained (2017) dollars per hour) {'memberUomFr': 'Dollars enchaînés (2017) par heure'}
    BOOLEAN = 447  # (Boolean) {'memberUomFr': 'Booléen'}
    RATE_PER_1000_POPULATION = 448  # (Rate per 1,000 population) {'memberUomFr': 'Taux pour 1 000 habitants'}
    _2023_CONSTANT_DOLLARS = 449  # (2023 constant dollars) {'memberUomFr': 'Dollars constants de 2023'}
    CALVES = 45  # (Calves) {'memberUomFr': 'Veaux'}
    MILLIONS_OF_CUBIC_METERS = 450  # (Millions of cubic meters) {'memberUomFr': 'Millions de mètres cubes'}
    INDEX_2023_100 = 451  # (Index, 2023=100) {'memberUomFr': 'Indice, 2023=100'}
    _202404_100 = 452  # (202404=100) {'memberUomFr': '202404=100'}
    CUBIC_METRES_PER_SQUARE_METRE = 453  # (Cubic metres per square metre) {'memberUomFr': 'Mètres cubes par mètre carré'}
    INDEX_202407_100 = 454  # (Index, 202407=100) {'memberUomFr': 'Indice, 202407=100'}
    _2024_CONSTANT_DOLLARS = 455  # (2024 constant dollars) {'memberUomFr': 'Dollars constants de 2024'}
    ARBITRARY_UNIT = 456  # (Arbitrary Unit) {'memberUomFr': 'Unité arbitraire'}
    MILLIGRAM_PER_CUBIC_METER_MG_M3 = 457  # (Milligram per cubic meter (mg/m3)) {'memberUomFr': 'Milligramme par mètre cube (mg/m3)'}
    AVAILABLE = 458  # (available) {'memberUomFr': 'available'}
    DISPONIBLE = 459  # (disponible) {'memberUomFr': 'disponible'}
    CANADA_100 = 46  # (Canada = 100) {'memberUomFr': 'Canada = 100'}
    CANADIAN_DOLLARS = 47  # (Canadian dollars) {'memberUomFr': 'Dollars canadiens'}
    CANADIAN_DOLLARS_PER_HUNDREDWEIGHT = 48  # (Canadian dollars per hundredweight) {'memberUomFr': 'Dollars canadiens par poids de cent livres'}
    CANADIAN_DOLLARS_PER_UNIT_OF_FOREIGN_CURRENCY = 49  # (Canadian dollars per unit of foreign currency) {'memberUomFr': 'Dollars canadiens par unité de devise étrangère'}
    _1992_CONSTANT_DOLLARS = 5  # (1992 constant dollars) {'memberUomFr': 'Dollars constants de 1992'}
    CARRIERS = 50  # (Carriers) {'memberUomFr': 'Transporteurs'}
    CARS = 51  # (Cars) {'memberUomFr': 'Wagons'}
    CASSETTES = 52  # (Cassettes) {'memberUomFr': 'Cassettes'}
    CATTLE = 53  # (Cattle) {'memberUomFr': 'Bovins'}
    CENT_DOZEN = 54  # (Cent/dozen) {'memberUomFr': 'Cent/douzaine'}
    CENTS = 55  # (Cents) {'memberUomFr': 'Cents'}
    CENTS_PER_CUBIC_METRE = 56  # (Cents per cubic metre) {'memberUomFr': 'Cents par mètre cube'}
    CENTS_PER_LITRE = 57  # (Cents per litre) {'memberUomFr': 'Cents par litre'}
    CENTS_PER_POUND = 58  # (Cents per pound) {'memberUomFr': 'Cents par livre'}
    CENTS_PER_POUND_OF_BUTTER_FAT = 59  # (Cents per pound of butter fat) {'memberUomFr': 'Cents par livre de gras de beurre'}
    _1992_CONSTANT_DOLLARS_PER_SQUARE_KILOMETRE = 6  # (1992 constant dollars per square kilometre) {'memberUomFr': 'Dollars constants de 1992 par kilomètre carré'}
    CHAINED_2002_DOLLARS = 60  # (Chained (2002) dollars) {'memberUomFr': 'Dollars enchaînés (2002)'}
    CHAINED_2002_DOLLARS_PER_HOUR = 61  # (Chained (2002) dollars per hour) {'memberUomFr': 'Dollars enchaînés (2002) par heure'}
    CHAINED_2007_DOLLARS_IN_THOUSANDS = 62  # (Chained (2007) dollars in thousands) {'memberUomFr': 'Dollars enchaînés (2007) en milliers'}
    CHAINED_2007_DOLLARS_PER_HOUR = 63  # (Chained (2007) dollars per hour) {'memberUomFr': 'Dollars enchaînés (2007) par heure'}
    CHICKS = 64  # (Chicks) {'memberUomFr': 'Poussins'}
    CHILDREN = 65  # (Children) {'memberUomFr': 'Enfants'}
    CIGARETTES = 66  # (Cigarettes) {'memberUomFr': 'Cigarettes'}
    CIGARS = 67  # (Cigars) {'memberUomFr': 'Cigars'}
    CLAIMS = 68  # (Claims) {'memberUomFr': 'Demandes'}
    CORPORATIONS = 69  # (Corporations) {'memberUomFr': 'Corporations'}
    _1992_100 = 7  # (1992=100) {'memberUomFr': '1992=100'}
    CORPORATIONS_1 = 70  # (Corporations) {'memberUomFr': 'Sociétés'}
    CRUDE_RATE_PER_100000_POPULATION = 71  # (Crude rate per 100,000 population) {'memberUomFr': 'Taux brut pour 100 000 personnes'}
    CUBIC_METRES = 72  # (Cubic metres) {'memberUomFr': 'Mètres cubes'}
    CUBIC_METRES_DRY = 73  # (Cubic metres dry) {'memberUomFr': 'Mètres cubes sec'}
    CUBIC_YARDS = 74  # (Cubic yards) {'memberUomFr': 'Verges cubes'}
    CURRENT_DOLLARS = 75  # (Current dollars) {'memberUomFr': 'Dollars courants'}
    CUSTOMERS = 76  # (Customers) {'memberUomFr': 'Clients'}
    DAYS = 77  # (Days) {'memberUomFr': 'Jours'}
    DEGREES_CELSIUS = 78  # (Degrees Celsius) {'memberUomFr': 'Degrés Celsius'}
    DISCS = 79  # (Discs) {'memberUomFr': 'Disques'}
    _199412_100 = 8  # (199412=100) {'memberUomFr': '199412=100'}
    DOLLAR_PER_100_POUND = 80  # (Dollar per 100 pound) {'memberUomFr': 'Dollar par 100 livre'}
    DOLLARS = 81  # (Dollars) {'memberUomFr': 'Dollars'}
    DOLLARS_PER_1_81_KILOGRAMS = 82  # (Dollars per 1.81 kilograms) {'memberUomFr': 'Dollars par 1,81 kilogrammes'}
    DOLLARS_PER_10_KILOGRAMS = 83  # (Dollars per 10 kilograms) {'memberUomFr': 'Dollars par 10 kilogrammes'}
    DOLLARS_PER_10_LITRES = 84  # (Dollars per 10 litres) {'memberUomFr': 'Dollars par 10 litres'}
    DOLLARS_PER_10_X_400_GRAMS = 85  # (Dollars per 10 x 400 grams) {'memberUomFr': 'Dollars par 10 x 400 grammes'}
    DOLLARS_PER_10000_FEET = 86  # (Dollars per 10,000 feet) {'memberUomFr': 'Dollars par 10 000 pieds'}
    DOLLARS_PER_15_KILOGRAMS = 87  # (Dollars per 15 kilograms) {'memberUomFr': 'Dollars par 15 kilogrammes'}
    DOLLARS_PER_2_KILOGRAMS = 88  # (Dollars per 2 kilograms) {'memberUomFr': 'Dollars par 2 kilogrammes'}
    NULL = 888  # (Null) {'memberUomFr': 'Null'}
    DOLLARS_PER_2_5_KILOGRAMS = 89  # (Dollars per 2.5 kilograms) {'memberUomFr': 'Dollars par 2,5 kilogrammes'}
    _1996_100 = 9  # (1996=100) {'memberUomFr': '1996=100'}
    DOLLARS_PER_20_KILOGRAMS = 90  # (Dollars per 20 kilograms) {'memberUomFr': 'Dollars par 20 kilogrammes'}
    DOLLARS_PER_20_LITRES = 91  # (Dollars per 20 litres) {'memberUomFr': 'Dollars par 20 litres'}
    DOLLARS_PER_205_LITRES = 92  # (Dollars per 205 litres) {'memberUomFr': 'Dollars par 205 litres'}
    DOLLARS_PER_22_7_LITRES = 93  # (Dollars per 22.7 litres) {'memberUomFr': 'Dollars par 22,7 litres'}
    DOLLARS_PER_25_KILOGRAMS = 94  # (Dollars per 25 kilograms) {'memberUomFr': 'Dollars par 25 kilogrammes'}
    DOLLARS_PER_3_KILOGRAMS = 95  # (Dollars per 3 kilograms) {'memberUomFr': 'Dollars par 3 kilogrammes'}
    DOLLARS_PER_3_3_LITRES = 96  # (Dollars per 3.3 litres) {'memberUomFr': 'Dollars par 3,3 litres'}
    DOLLARS_PER_4_LITRES = 97  # (Dollars per 4 litres) {'memberUomFr': 'Dollars par 4 litres'}
    DOLLARS_PER_4_45_LITRES = 98  # (Dollars per 4.45 litres) {'memberUomFr': 'Dollars par 4,45 litres'}
    DOLLARS_PER_5_LITRES = 99  # (Dollars per 5 litres) {'memberUomFr': 'Dollars par 5 litres'}
