# Smart changelog updater
# Trigger: runs when a pull request is closed into the `dev` branch.
# Purpose: analyze the PR's changed files; if package-relevant changes are present,
#          update CHANGELOG.md automatically and commit the change.
name: Smart Changelog Update

on:
  pull_request:
    types: [closed]
    branches: [ "dev" ]

permissions:
  contents: write
  pull-requests: read

jobs:
  analyze-changes:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    outputs:
      has-package-changes: ${{ steps.analysis.outputs.has_changes }}
      skip-changelog: ${{ steps.analysis.outputs.skip }}
    steps:
    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Analyze files for package relevance
      id: analysis
      env:
        PR_NUMBER: ${{ github.event.pull_request.number }}
        GH_TOKEN: ${{ github.token }}
      run: |
        echo "Analyzing PR #$PR_NUMBER for package-relevant changes"

        # Fetch changed files for the PR (handles standard result size; PRs with
        # >100 files should be rare for package changes; adjust pagination if needed)
        CHANGED_FILES=$(curl -s -H "Authorization: token $GH_TOKEN" \
          "https://api.github.com/repos/${{ github.repository }}/pulls/$PR_NUMBER/files" | \
          jq -r 'map(.filename) | .[]')

        echo "Files changed in PR #$PR_NUMBER:" 
        echo "$CHANGED_FILES"

        # Determine if any of the changed files are package-relevant using the
        # helper script. The script reads newline-separated filenames from stdin
        # and prints exactly 'true' or 'false'.
        HAS_PACKAGE_CHANGES=$(echo "$CHANGED_FILES" | python .github/scripts/check_package_changes.py)

        if [ "$HAS_PACKAGE_CHANGES" = "true" ]; then
          echo "‚úÖ PR contains package changes - changelog update needed"
          echo "has_changes=true" >> $GITHUB_OUTPUT
          echo "skip=false" >> $GITHUB_OUTPUT
        else
          echo "‚è≠Ô∏è  PR contains only infrastructure changes - skipping changelog"
          echo "has_changes=false" >> $GITHUB_OUTPUT
          echo "skip=true" >> $GITHUB_OUTPUT
        fi

  update-changelog:
    needs: analyze-changes
    if: needs.analyze-changes.outputs.skip-changelog == 'false'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Update changelog
        env:
          PR_NUMBER: ${{ github.event.pull_request.number }}
          PR_TITLE: ${{ github.event.pull_request.title }}
          PR_AUTHOR: ${{ github.event.pull_request.user.login }}
          PR_URL: ${{ github.event.pull_request.html_url }}
        run: |
          python .github/scripts/update_changelog.py "$PR_NUMBER" "$PR_TITLE" "$PR_AUTHOR" "$PR_URL"

      - name: Commit changelog update
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "üìù Add PR #${{ github.event.pull_request.number }} to changelog"
          file_pattern: CHANGELOG.md
          tagging_message: 'changelog-update-${{ github.event.pull_request.number }}'

  skip-changelog:
    needs: analyze-changes
    if: needs.analyze-changes.outputs.skip-changelog == 'true'
    runs-on: ubuntu-latest
    steps:
    - name: Log skip reason
      run: |
        echo "‚è≠Ô∏è  Skipping changelog update for PR #${{ github.event.pull_request.number }}"
        echo "Reason: PR contains only infrastructure/tooling changes"
