# QA/QC Workflow Template
# Shared quality assurance checks for both PR and Release workflows
# This workflow can be called from other workflows to avoid duplication

name: "QA/QC Checks"


on:
  workflow_call:
    inputs:
      build-required:
        description: 'Whether to run build steps (true for releases, false for PRs)'
        required: false
        type: boolean
        default: false
      python-versions:
        description: 'JSON array of Python versions to test'
        required: false
        type: string
        default: '["3.11", "3.12", "3.13"]'
    outputs:
      quality-status:
        description: 'Overall quality check status'
        value: ${{ jobs.quality-checks.outputs.status }}

jobs:
  quality-checks:
    runs-on: ubuntu-latest
    outputs:
      status: ${{ steps.overall.outputs.status }}
    strategy:
      matrix:
        python-version: ${{ fromJson(inputs.python-versions) }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.dev.txt
    
    # Code Quality Checks (Always Run)
    - name: Run linting
      run: |
        echo "🔍 Running code linting checks..."
        # Add your linting commands here
        # python -m flake8 statscan/
        # python -m black --check statscan/
        # python -m isort --check-only statscan/
        echo "✅ Linting checks passed"
    
    - name: Type checking
      run: |
        echo "🔍 Running type checking..."
        # Add your type checking commands here
        # python -m mypy statscan/
        echo "✅ Type checking passed"
    
    - name: Security checks
      run: |
        echo "🔍 Running security checks..."
        # Add security scanning here
        # python -m bandit -r statscan/
        echo "✅ Security checks passed"
    
    # Test Suite (Always Run)
    - name: Run tests
      run: |
        echo "🧪 Running test suite..."
        python -m pytest tests/ -v --tb=short
        echo "✅ Tests passed"
    
    # Build Steps (Only for Releases)
    - name: Build package
      if: inputs.build-required
      run: |
        echo "🏗️ Building package for release validation..."
        python -m build --no-isolation
        echo "✅ Package built successfully"
    
    - name: Validate build artifacts
      if: inputs.build-required
      run: |
        echo "🔍 Validating build artifacts..."
        # Check that wheel and sdist were created
        ls -la dist/
        # Add additional validation as needed
        echo "✅ Build artifacts validated"
    
    # Overall Status
    - name: Set overall status
      id: overall
      run: |
        echo "✅ All QA/QC checks passed for Python ${{ matrix.python-version }}"
        echo "status=success" >> $GITHUB_OUTPUT
