name: Prepare Release Changelog

on:
  push:
    branches: [main]

permissions:
  contents: write

jobs:
  prepare-release-changelog:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Configure Git
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
    
    - name: Check if this is a merge from dev branch
      id: check_merge
      run: |
        # Check if this push was a merge from dev branch
        COMMIT_MESSAGE=$(git log -1 --pretty=%B)
        if [[ "$COMMIT_MESSAGE" == *"Merge"* && "$COMMIT_MESSAGE" == *"dev"* ]]; then
          echo "This appears to be a merge from dev branch"
          echo "is_dev_merge=true" >> $GITHUB_OUTPUT
        else
          echo "This is not a merge from dev branch"  
          echo "is_dev_merge=false" >> $GITHUB_OUTPUT
        fi
    
    - name: Prepare changelog for release
      if: steps.check_merge.outputs.is_dev_merge == 'true'
      run: |
        if [ -f "CHANGELOG.md" ] && grep -q "## \[Unreleased\]" CHANGELOG.md; then
          echo "Preparing unreleased changes for upcoming release..."
          
          # Get current date
          RELEASE_DATE=$(date '+%Y-%m-%d')
          
          # The version will be determined during the build process
          # For now, we just ensure the unreleased section exists and is ready
          echo "Changelog is ready for version assignment during release process"
          echo "No changes needed - version will be set during PyPI publish workflow"
        else
          echo "No CHANGELOG.md or unreleased section found"
        fi
